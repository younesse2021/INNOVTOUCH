@page "/"
@using InnovTouch_BO.Client.Components;
@using DLC_BO.Client.Service.Entite;
@using DLC_BO.Client.Service.Produits;
@using InnovTouch_BO.Client.Service.DetailsLotService;
@using InnovTouch_BO.Client.Service.Emplacement;
@using InnovTouch_BO.Client.Service.Inventaires;
@using global::Shared.DTO.InnovTouch.DTO.Entite;
@using global::Shared.DTO.InnovTouch.DTO.Helper;
@using global::Shared.DTO.InnovTouch.DTO.Inventaire;
@using global::Shared.DTO.InnovTouch.DTO.Produit;

@inject NotificationService _notificationService
@inject DialogService _dialogService
@inject BlazorSpinner.SpinnerService _spinnerService
@inject AppStateContainer _appStateContainer
@inject EnseigneService _enseigneService
@inject AlerteProduitService _alerteProduitService
@inject FamilleProduitService _familleProduitService
@inject AddInventaireService _AddInventaireService
@inject EmplacementService _EmplacementService
@inject DetailLotService _DetailLotService


<RadzenPanel AllowCollapse="false">
    <HeaderTemplate>
        <RadzenText TextStyle="TextStyle.H6" Class="rz-display-flex rz-align-items-center rz-m-0">
            <RadzenIcon Icon="account_box" class="rz-mr-1" /><b>Gestion des Lots</b>
        </RadzenText>
    </HeaderTemplate>
    <ChildContent>
        <div class="row">
            <div class="row">
                <div class="col-12">
                    <div class="float-end">


                        <RadzenButton Size="ButtonSize.Medium" Click=@(args => ExportExcelBtnClick())
                                      Text="Exporter les Lot"
                                      Icon="download"
                                      ButtonStyle="ButtonStyle.Success" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <RadzenDataGrid @ref="@gridData"
                                    IsLoading="@_isLoading"
                                    Data="@_Lots"
                                    TItem="DetailsLotDto"
                                    AllowFiltering="true"
                                    AllowSorting="true"
                                    AllowPaging="true"
                                    PageSize="10"
                                    FilterMode="FilterMode.Simple"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    LogicalFilterOperator="LogicalFilterOperator.Or"
                                    ColumnWidth="200px"
                                    TItem="LotDto">
                        <EmptyTemplate><p>Vide</p></EmptyTemplate>

                        <Columns>
                            <RadzenDataGridColumn TItem="DetailsLotDto" Property="NomInventaire" Title="Nom Inventaire" />
                            <RadzenDataGridColumn TItem="DetailsLotDto" Property="Nomrayone" Title="Nom Rayon" />
                            <RadzenDataGridColumn TItem="DetailsLotDto" Property="Libbele" Title="Libbele" />
                            <RadzenDataGridColumn TItem="DetailsLotDto" Title="Type Emplacement" Property="Type">
                            <Template Context="data">
                                    @if (data.Type == 1)
                                    {
                                        <RadzenButton Variant="Variant.Flat" style="display: block;padding: -5;border-radius: 50px;font-size: 10px;" Shade="Shade.Lighter" Text="Magasin" ButtonStyle="ButtonStyle.Danger" />
                                    }
                                    else
                                    {
                                        <RadzenButton Variant="Variant.Flat" style="display: block;padding: -5;border-radius: 50px;font-size: 10px;" Shade="Shade.Lighter" Text="Reserve" ButtonStyle="ButtonStyle.Danger" />
                                    }
                                 </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn TItem="DetailsLotDto" Width="120px" Property="StatusLOt" Title="Statut Lot" Sortable="false" Filterable="false">
                                <Template Context="data">
                                    <RadzenImage Visible="!data.IsScanned" Path="/images/close.png" Style="width: 20px;hight: 20px;" />
                                    <RadzenImage Visible="data.IsScanned" Path="/images/check.png" Style="width: 20px;hight: 20px;" />
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>

                    </RadzenDataGrid>
                </div>
            </div>
        </div>
    </ChildContent>
</RadzenPanel>


@code {

    private List<DetailsLotDto>? _Lots { get; set; }
    private RadzenDataGrid<DetailsLotDto>? gridData { get; set; }
    private DetailsLotDto? _newItem;
    private bool _isLoading = true;
    private EventCallback AjoutHandler => new(this, (Action)(async () => { await AddRowCallBack(); }));

    protected async override Task OnInitializedAsync()
    {
        await LoadGrid();
    }

    public async Task LoadGrid()
    {
        _isLoading = true;
        var response = await _DetailLotService.GetAll();

        if (!response.Succeeded)
        {
            _Lots?.Clear();
            return;
        }
        _Lots = new List<DetailsLotDto>();
        _Lots.AddRange(response.Data);
        _isLoading = false;
    }

    public async Task AddRowCallBack()
    {
        await LoadGrid();
    }

    private async Task ExportExcelBtnClick()
    {
        try
        {
            _isLoading = true;
            await _EmplacementService.DowloadExport(1);
            _isLoading = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            _notificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Detail = "Echèc de l'opération!"
                });
        }

    }
}

